name: Build and deploy environment-monitor

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy:
        description: "Run Deploy Job?"
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ">=20.0.0"

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # Install LocalDB
      - name: Install LocalDB
        uses: potatoqualitee/mssqlsuite@v1.8
        with:
          install: localdb

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Test with the dotnet CLI
        run: |
          dotnet test tests/EnvironmentMonitor.Tests/EnvironmentMonitor.Tests.csproj

      - name: Install dependencies for React UI
        run: npm install --prefix src/EnvironmentMonitor.ReactUi/environment-monitor --legacy-peer-deps

      - name: Build React UI (Vite)
        run: |
          cd src/EnvironmentMonitor.ReactUi/environment-monitor
          npm run build

      - name: Copy Vite build to .NET wwwroot
        run: |
          cp -r src/EnvironmentMonitor.ReactUi/environment-monitor/dist/ src/EnvironmentMonitor.WebApi/wwwroot/

      - name: dotnet publish (WebApi)
        run: dotnet publish src/EnvironmentMonitor.WebApi/EnvironmentMonitor.WebApi.csproj -c Release -o "${{env.DOTNET_ROOT}}/env-monitor-web-api"

      - name: dotnet publish (Function)
        run: dotnet publish src/EnvironmentMonitor.HubObserver/EnvironmentMonitor.HubObserver.csproj -c Release -o "${{env.DOTNET_ROOT}}/env-monitor-function"

      - name: Upload web api artifact
        uses: actions/upload-artifact@v4
        with:
          name: .env-monitor-web-api
          path: ${{env.DOTNET_ROOT}}/env-monitor-web-api

      - name: Upload function artifact
        uses: actions/upload-artifact@v4
        with:
          name: .env-monitor-function
          path: ${{env.DOTNET_ROOT}}/env-monitor-function
          include-hidden-files: true
  deploy:
    runs-on: windows-latest
    needs: build
    if: github.event_name == 'push' || inputs.deploy == 'true'
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download WEB API artifacts
        uses: actions/download-artifact@v4
        with:
          name: .env-monitor-web-api
          path: "./env-monitor-web-api"

      - name: Download HubObserver artifacts
        uses: actions/download-artifact@v4
        with:
          name: .env-monitor-function
          path: "./env-monitor-function"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4C8625311A7E41DF94B1F493E439AE3D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A9F03B52F6CA485B82924F1970E00D80 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E4CE7A1599994A388FDDA5640CED3ECE }}

      - name: Deploy Environment Monitor Web API
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "env-monitor"
          slot-name: "Production"
          package: "./env-monitor-web-api"

      - name: "Deploy HubObserver (Azure function)"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: "EnvironmentMonitorHubObserver"
          slot-name: "Production"
          package: "./env-monitor-function"
